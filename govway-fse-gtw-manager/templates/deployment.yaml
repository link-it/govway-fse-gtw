apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "service.fullname" . }}
  labels:
    {{- include "service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaler.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            - name: "SERVICE_ADDRESS"
              valueFrom:
                configMapKeyRef:
                  name: network-address
                  key: govway-service-address
            - name: GOVWAY_POP_DB_SKIP
              value: "{{ .Values.govway.popDbSkip }}"
            - name: "GOVWAY_DS_CONN_PARAM"
              valueFrom:
                configMapKeyRef:
                  name: datastore-address
                  key: govway-db-conn-param
            - name: "GOVWAY_DB_SERVER"
              valueFrom:
                configMapKeyRef:
                  name: datastore-address
                  key: govway-db-address
            - name: "GOVWAY_DB_NAME"
              valueFrom:
                configMapKeyRef:
                  name: datastore-address
                  key: govway-trace-name
            - name: "GOVWAY_STAT_DB_NAME"
              valueFrom:
                configMapKeyRef:
                  name: datastore-address
                  key: govway-stats-name
            - name: "GOVWAY_CONF_DB_NAME"
              valueFrom:
                configMapKeyRef:
                  name: datastore-address
                  key: govway-conf-name
            - name: "GOVWAY_DB_USER"
              valueFrom:
                secretKeyRef:
                  key: app-name
                  name: {{ include "service.fullname" . }}-gtw-secrets
            - name: GOVWAY_READY_DB_CHECK_SKIP
              value: "{{ .Values.govway.readyDbCheckSkip }}"
            - name: GOVWAY_DEFAULT_ENTITY_NAME
              value: {{ .Values.govway.defaultEntityName }}
            - name: GOVWAY_DS_JDBC_LIBS
              value: "{{ .Values.cloud.jdbcLibs }}/{{ .Values.cloud.provider }}"
            - name: AZURE_LOG_LEVEL
              value: {{ .Values.govway.logLevel }}
            - name: "AZURE_TENANT_ID"
              value: {{ .Values.secrets.tenantId | quote }}
            - name: "AZURE_CLIENT_ID"
              valueFrom:
                secretKeyRef:
                  key: app-id-{{ include "service.fullname" . }}
                  name: {{ include "service.fullname" . }}-gtw-secrets
            - name: "AZURE_CLIENT_CERTIFICATE_PATH"
              value: "/mnt/secrets-store/app-cert"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry.urlGovWay }}/{{ .Values.image.registry.repositoryGovWay }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
              protocol: {{ .Values.service.protocol }}
          readinessProbe:
            httpGet:
              path: {{ .Values.containers.readinessProbe.path }}
              port: {{ .Values.containers.readinessProbe.port }}
            failureThreshold: {{ .Values.containers.readinessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.containers.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.containers.readinessProbe.periodSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
            - mountPath: /etc/govway
              name: govway-fse-gtw-manager-cm-volume
            - name: {{ include "service.fullname" . }}-secrets-store
              mountPath: "/mnt/secrets-store"
              readOnly: true
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - configMap:
            defaultMode: 420
            name: {{ include "service.fullname" . }}-cm 
          name: govway-fse-gtw-manager-cm-volume
        - name: {{ include "service.fullname" . }}-secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "service.fullname" . }}-azure-keyvault-secrets  # Reference the dynamically generated SecretProviderClass
            nodePublishSecretRef:
              name: {{ required "A valid .Values.secrets.secretKeyVaultName entry required!" (index (.Values.secrets) "secretKeyVaultName") }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
