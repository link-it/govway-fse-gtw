{{- include "govway_fse_gtw.validateCloudProvider" . }}
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: {{ include "govway_fse_gtw.fullname" . }}-{{ .Values.cloudProvider }}-keyvault-secrets
spec:
  provider: {{ index .Values.providerConfig .Values.cloudProvider "secretProviderName" }}
  secretObjects:
    - secretName: {{ include "govway_fse_gtw.fullname" . }}-gtw-secrets
      type: Opaque
      {{- if eq .Values.cloudProvider "azure" }}
      data:
        - key: app-name
          objectName: app-name
        - key: app-id-{{ include "govway_fse_gtw.fullname" . }}
          objectName: app-id
        - key: app-cert
          objectName: app-cert
      {{- end }}
  parameters:
    {{- if eq .Values.cloudProvider "azure" }}
    usePodIdentity: "false"
    keyvaultName: {{ required "A valid .Values.secrets.keyvaultName entry required!" (index (.Values.secrets) "keyvaultName") }}
    tenantId: {{ required "A valid .Values.secrets.tenantId entry required!" (index (.Values.secrets) "tenantId") }}
    {{- end }}
    objects: |
      [
        {{- if eq .Values.cloudProvider "azure" }}
        {
          "objectName": "app-cert",
          "objectType": {{ index .Values.providerConfig .Values.cloudProvider "secretsType" | quote }}
        },

        {
          "objectName": "app-name",
          "objectType": {{ index .Values.providerConfig .Values.cloudProvider "secretsType" | quote  }}
        },
        {
          "objectName": "app-id",
          "objectType": {{ index .Values.providerConfig .Values.cloudProvider "secretsType" | quote  }}
        },
        {{- end }}
        {
          "objectName": "ini-client-cert",
          "objectType": {{ index .Values.providerConfig .Values.cloudProvider "secretsType"  | quote }},
          "objectAlias": {{ required "A valid filename .Values.keystore.authIni entry required, like A1GTW-INI.pfx" (index (.Values.keystore) "authIni")  | quote }}
          {{- if eq .Values.cloudProvider "azure" }}
          , "objectFormat": "pfx",
          "objectEncoding": "base64"          
          {{- end }}
        },
        {
          "objectName": "centralizzato-client-cert",
          "objectType": {{ index .Values.providerConfig .Values.cloudProvider "secretsType" | quote  }},
          "objectAlias": {{ required "A valid filename .Values.keystore.authCentralizzato entry required, like auth-centralized-services.pfx" (index (.Values.keystore) "authCentralizzato") | quote  }}
          {{- if eq .Values.cloudProvider "azure" }}
          , "objectFormat": "pfx",
          "objectEncoding": "base64"
          {{- end }}
        }
      ]