{{- include "govway_fse_gtw.validateCloudProvider" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "govway_fse_gtw.fullname" . }}
  labels:
    {{- include "govway_fse_gtw.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaler.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "govway_fse_gtw.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "govway_fse_gtw.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccountName | default (include "service.serviceAccountName" .) }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            - name: GOVWAY_POP_DB_SKIP
              value: "{{ .Values.govway.popDbSkip }}"
            - name: "GOVWAY_DS_CONN_PARAM"
              valueFrom:
                configMapKeyRef:
                  name: datastore-address
                  key: govway-db-conn-param
            - name: "GOVWAY_DB_SERVER"
              valueFrom:
                configMapKeyRef:
                  name: datastore-address
                  key: govway-db-address
            - name: "GOVWAY_DB_NAME"
              valueFrom:
                configMapKeyRef:
                  name: datastore-address
                  key: govway-trace-name
            - name: "GOVWAY_STAT_DB_NAME"
              valueFrom:
                configMapKeyRef:
                  name: datastore-address
                  key: govway-stats-name
            - name: "GOVWAY_CONF_DB_NAME"
              valueFrom:
                configMapKeyRef:
                  name: datastore-address
                  key: govway-conf-name
            - name: "GOVWAY_DB_USER"
              {{- if eq .Values.cloudProvider "azure" }}           
              valueFrom:
                secretKeyRef:
                  key: app-name
                  name: {{ include "govway_fse_gtw.fullname" . }}-gtw-secrets
              {{- else if eq .Values.cloudProvider "aws" }}
              value: "govway-user"
              {{- end }}
            - name: GOVWAY_READY_DB_CHECK_SKIP
              value: "{{ .Values.govway.readyDbCheckSkip }}"
            - name: GOVWAY_DEFAULT_ENTITY_NAME
              value: {{ .Values.govway.defaultEntityName }}
            - name: GOVWAY_DS_JDBC_LIBS
              value: "{{ .Values.jdbcLibs }}/{{ .Values.cloudProvider }}"
            - name: FSE_CLOUD_PROVIDER
              value: {{ .Values.cloudProvider | quote }}
            {{- if eq .Values.cloudProvider "azure" }}
            - name: AZURE_LOG_LEVEL
              value: {{ .Values.govway.logLevel }}
            - name: "AZURE_TENANT_ID"
              value: {{ .Values.secrets.tenantId | quote }}
            - name: "AZURE_CLIENT_ID"
              valueFrom:
                secretKeyRef:
                  key: app-id-{{ include "govway_fse_gtw.fullname" . }}
                  name: {{ include "govway_fse_gtw.fullname" . }}-gtw-secrets
            - name: "AZURE_CLIENT_CERTIFICATE_PATH"
              value: "/mnt/secrets-store/app-cert"
            {{ else if eq .Values.cloudProvider "aws" }}
            - name: AWS_LOG_LEVEL
              value: {{ .Values.govway.logLevel }}
            - name: "AWS_CLIENT_CERTIFICATE_PATH"
              value: "/mnt/secrets-store/app-cert"
            {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry.urlGovWay }}/{{ .Values.image.registry.repositoryGovWay }}:{{ .Values.image.tag | default (printf "%s_run" .Chart.AppVersion) }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
              protocol: {{ .Values.service.protocol }}
          readinessProbe:
            httpGet:
              path: {{ .Values.containers.readinessProbe.path }}
              port: {{ .Values.containers.readinessProbe.port }}
            failureThreshold: {{ .Values.containers.readinessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.containers.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.containers.readinessProbe.periodSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
            - name: govway-shared-volume
              mountPath: /var/log/govway/fileTrace

            - name: govway-fse-gtw-run-cm-volume
              mountPath: /etc/govway
                        
            - name: {{ include "govway_fse_gtw.fullname" . }}-secrets-volume
              mountPath: "/mnt/secrets-store"
              readOnly: true

            - name: {{ include "govway_fse_gtw.fullname" . }}-secrets-volume
              mountPath: "/etc/govway/keystore/{{ required "A valid filename .Values.keystore.authIni entry required, like A1GTW-INI.pfx" (index (.Values.keystore) "authIni") }}"
              readOnly: true
              subPath: {{ required "A valid filename .Values.keystore.authIni entry required, like A1GTW-INI.pfx" (index (.Values.keystore) "authIni") }}

            - name: {{ include "govway_fse_gtw.fullname" . }}-secrets-volume
              mountPath: "/etc/govway/keystore/{{ required "A valid filename .Values.keystore.authCentralizzato entry required, like auth-centralized-services.pfx" (index (.Values.keystore) "authCentralizzato") }}"
              readOnly: true
              subPath: {{ required "A valid filename .Values.keystore.authCentralizzato entry required, like auth-centralized-services.pfx" (index (.Values.keystore) "authCentralizzato") }}

            - name: {{ include "govway_fse_gtw.fullname" . }}-truststore-volume
              mountPath: "/etc/govway/truststore/{{ required "A valid filename .Values.truststore.caSalute entry required, like tsCASalute.jks" (index (.Values.truststore) "caSalute") }}"
              subPath: {{ required "A valid filename .Values.truststore.caSalute entry required, like tsCASalute.jks" (index (.Values.truststore) "caSalute") }}

            - name: {{ include "govway_fse_gtw.fullname" . }}-truststore-volume
              mountPath: "/etc/govway/truststore/{{ required "A valid filename .Values.truststore.authIni entry required, like tsINI.jks" (index (.Values.truststore) "authIni") }}"
              readOnly: true
              subPath: {{ required "A valid filename .Values.truststore.authIni entry required, like tsINI.jks" (index (.Values.truststore) "authIni") }}
              
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - name: govway-shared-volume
          persistentVolumeClaim:
            claimName: govway-shared-pvc

        - name: {{ include "govway_fse_gtw.fullname" . }}-truststore-volume
          configMap:
            defaultMode: 420
            items:
              - key: {{ required "A valid filename .Values.truststore.caSalute entry required, like tsCASalute.jks" (index (.Values.truststore) "caSalute") }}
                path: {{ required "A valid filename .Values.truststore.caSalute entry required, like tsCASalute.jks" (index (.Values.truststore) "caSalute") }}
              - key: {{ required "A valid filename .Values.truststore.authIni entry required, like tsINI.jks" (index (.Values.truststore) "authIni") }}
                path: {{ required "A valid filename .Values.truststore.authIni entry required, like tsINI.jks" (index (.Values.truststore) "authIni") }}
            name: govway-truststore-cm
          
        - name: govway-fse-gtw-run-cm-volume
          configMap:
            defaultMode: 420
            name: {{ include "govway_fse_gtw.fullname" . }}-cm
        - name: {{ include "govway_fse_gtw.fullname" . }}-secrets-volume
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "govway_fse_gtw.fullname" . }}-{{ .Values.cloudProvider }}-keyvault-secrets  # Reference the dynamically generated SecretProviderClass
            {{- if eq .Values.cloudProvider "azure" }}
            nodePublishSecretRef:
              name: {{ required "A valid .Values.secrets.secretKeyVaultName entry required!" (index (.Values.secrets) "secretKeyVaultName") }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
