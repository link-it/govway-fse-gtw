{{- include "govway_fse_gtw.validateCloudProvider" . }}
{{- if not (index .Values.providerConfig .Values.cloudProvider "routeEnabled") }}
{{- $serviceName :=  (include "govway_fse_gtw.fullname" . ) -}}
{{- $servicePort := .Values.service.port -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "govway_fse_gtw.fullname" . }}
  labels:
    {{- include "govway_fse_gtw.labels" . | nindent 4 }}
{{- if or .Values.service.annotations (eq .Values.cloudProvider "aws") }}
  annotations:
    {{- with .Values.service.annotations }}
    {{- toYaml . | nindent 4 }}  
    {{- end }}
    {{- if eq .Values.cloudProvider "aws" }}
    alb.ingress.kubernetes.io/load-balancer-name: k8s-gateway-fse-dispatcher-alb
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.secrets.certificateArn | quote }}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/mutual-authentication: |
      [
        {"port": 443, "mode": "verify", "trustStore": {{ .Values.secrets.truststoreArn | quote }} }
      ]
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: "instance" 
    {{- end }}
{{- end }}
spec:
{{- if eq .Values.cloudProvider "aws" }}
  ingressClassName: alb
{{- end }}
  rules:
    {{- range $host := .Values.ingress.hosts }}
    - host: {{ $host }}
      http:
        paths:
          - path: /govway/rest/in/
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ $serviceName }}
                port:
                  number: {{ $servicePort }}
    {{- end }}
  tls:
    - hosts:
        {{- range $host := .Values.ingress.hosts }}
        - {{ $host }}
        {{- end }}
{{- end }}