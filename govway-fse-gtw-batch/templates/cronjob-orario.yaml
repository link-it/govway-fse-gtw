apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "it-fse-gtw-govway-batch.fullname" . }}-cronjob-orario
  labels:
    {{- include "it-fse-gtw-govway-batch.labels" . | nindent 4 }}
  # annotations:
  #   helm.sh/hook: pre-install,pre-upgrade
  #   helm.sh/hook-delete-policy: before-hook-creation
  #   helm.sh/hook-weight: "-1"
spec:
  schedule: "*/5 * * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: {{ include "it-fse-gtw-govway-batch.serviceAccountName" . }}
          containers:
          - name: {{ include "it-fse-gtw-govway-batch.fullname" . }}-statistiche-orarie
            image: "{{ .Values.image.registry.urlGovWay }}/{{ .Values.image.registry.repositoryGovWay }}:{{ .Values.image.tag | default (printf "%s_batch" .Chart.Version) }}"
            imagePullPolicy: Always
            args:
            - orarie
            env:
            - name: GOVWAY_POP_DB_SKIP
              value: "{{ .Values.govway.popDbSkip }}"
            - name: "GOVWAY_DS_CONN_PARAM"
              valueFrom:
                configMapKeyRef:
                  name: datastore-address
                  key: govway-db-conn-param
            - name: "GOVWAY_STAT_DS_CONN_PARAM"
              valueFrom:
                configMapKeyRef:
                  name: datastore-address
                  key: govway-db-conn-param
            - name: "GOVWAY_STAT_DB_SERVER"
              valueFrom:
                configMapKeyRef:
                  name: datastore-address
                  key: govway-db-address
            - name: "GOVWAY_TRAC_DB_NAME"
              valueFrom:
                configMapKeyRef:
                  name: datastore-address
                  key: govway-trace-name
            - name: "GOVWAY_STAT_DB_NAME"
              valueFrom:
                configMapKeyRef:
                  name: datastore-address
                  key: govway-stats-name
            - name: "GOVWAY_CONF_DB_NAME"
              valueFrom:
                configMapKeyRef:
                  name: datastore-address
                  key: govway-conf-name
            - name: "GOVWAY_STAT_DB_USER"
              valueFrom:
                secretKeyRef:
                  key: app-name
                  name: {{ include "it-fse-gtw-govway-batch.fullname" . }}-gtw-secrets
            - name: GOVWAY_READY_DB_CHECK_SKIP
              value: "{{ .Values.govway.readyDbCheckSkip }}"
            - name: GOVWAY_DEFAULT_ENTITY_NAME
              value: {{ .Values.govway.defaultEntityName }}
            - name: GOVWAY_DS_JDBC_LIBS
              value: "{{ .Values.cloud.jdbcLibs }}/{{ .Values.cloud.provider }}"
            {% if .Values.cloud.provider == "azure" %}
            - name: AZURE_LOG_LEVEL
              value: {{ .Values.govway.logLevel }}
            - name: "AZURE_TENANT_ID"
              value: {{ .Values.secrets.tenantId | quote }}
            - name: "AZURE_CLIENT_ID"
              valueFrom:
                secretKeyRef:
                  key: app-id-{{ include "service.fullname" . }}
                  name: {{ include "service.fullname" . }}-gtw-secrets
            - name: "AZURE_CLIENT_CERTIFICATE_PATH"
              value: "/mnt/secrets-store/app-cert"
            {% elif .Values.cloud.provider == "aws" %}
            - name: AWS_LOG_LEVEL
              value: {{ .Values.govway.logLevel }}
            - name: "AWS_ROLE_ARN"
              value: {{ .Values.secrets.tenantId | quote }}
            - name: "AWS_ACCESS_KEY_ID"
              valueFrom:
                secretKeyRef:
                  key: app-id-{{ include "service.fullname" . }}
                  name: {{ include "service.fullname" . }}-gtw-secrets
            - name: "AWS_CLIENT_CERTIFICATE_PATH"
              value: "/mnt/secrets-store/app-cert"
            {% endif %}
            volumeMounts:
            - name: {{ include "it-fse-gtw-govway-batch.fullname" . }}-secrets-store
              mountPath: "/mnt/secrets-store"
              readOnly: true
          restartPolicy: OnFailure
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          volumes:
            - name: {{ include "it-fse-gtw-govway-batch.fullname" . }}-secrets-store
              csi:
                driver: secrets-store.csi.k8s.io
                readOnly: true
                volumeAttributes:
                  secretProviderClass: {{ include "it-fse-gtw-govway-batch.fullname" . }}-azure-keyvault-secrets  # Reference the dynamically generated SecretProviderClass
                nodePublishSecretRef:
                  name: {{ required "A valid .Values.secrets.secretKeyVaultName entry required!" (index (.Values.secrets) "secretKeyVaultName") }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 10 }}
          {{- end }}

