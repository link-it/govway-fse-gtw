{{- include "govway_fse_gtw.validateCloudProvider" . }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "govway_fse_gtw.fullname" . }}-cj-ora
  labels:
    {{- include "govway_fse_gtw.labels" . | nindent 4 }}
spec:
  schedule: "*/5 * * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: {{ .Values.serviceAccountName | default (include "govway_fse_gtw.serviceAccountName" .) }}
          containers:
          - name: {{ include "govway_fse_gtw.fullname" . }}-statistiche-orarie
            image: "{{ .Values.image.registry.urlGovWay }}/{{ .Values.image.registry.repositoryGovWay }}:{{ .Values.image.tag | default (printf "%s_batch" .Chart.AppVersion) }}"
            imagePullPolicy: Always
            args:
            - orarie
            env:
              - name: "GOVWAY_DS_CONN_PARAM"
                valueFrom:
                  configMapKeyRef:
                    name: datastore-address
                    key: govway-db-conn-param
              - name: "GOVWAY_STAT_DS_CONN_PARAM"
                valueFrom:
                  configMapKeyRef:
                    name: datastore-address
                    key: govway-db-conn-param
              - name: "GOVWAY_STAT_DB_SERVER"
                valueFrom:
                  configMapKeyRef:
                    name: datastore-address
                    key: govway-db-address
              - name: "GOVWAY_TRAC_DB_NAME"
                valueFrom:
                  configMapKeyRef:
                    name: datastore-address
                    key: govway-trace-name
              - name: "GOVWAY_STAT_DB_NAME"
                valueFrom:
                  configMapKeyRef:
                    name: datastore-address
                    key: govway-stats-name
              - name: "GOVWAY_CONF_DB_NAME"
                valueFrom:
                  configMapKeyRef:
                    name: datastore-address
                    key: govway-conf-name
            
              - name: "GOVWAY_STAT_DB_USER"
                {{- if eq .Values.cloudProvider "azure" }}           
                valueFrom:
                  secretKeyRef:
                    key: app-name
                    name: {{ include "govway_fse_gtw.fullname" . }}-gtw-secrets
                {{- else if eq .Values.cloudProvider "aws" }}
                value: "govway-user"
                {{- end }}
              - name: GOVWAY_READY_DB_CHECK_SKIP
                value: "{{ .Values.govway.readyDbCheckSkip }}"
              - name: GOVWAY_DEFAULT_ENTITY_NAME
                value: {{ .Values.govway.entityName }}
              - name: GOVWAY_DS_JDBC_LIBS
                value: "{{ .Values.jdbcLibs }}/{{ .Values.cloudProvider }}"
              - name: FSE_CLOUD_PROVIDER
                value: {{ .Values.cloudProvider | quote }}
              {{- if eq .Values.cloudProvider "azure" }}
              - name: AZURE_LOG_LEVEL
                value: {{ .Values.govway.logLevel }}
              - name: "AZURE_TENANT_ID"
                value: {{ .Values.secrets.tenantId | quote }}
              - name: "AZURE_CLIENT_ID"
                valueFrom:
                  secretKeyRef:
                    key: app-id-{{ include "govway_fse_gtw.fullname" . }}
                    name: {{ include "govway_fse_gtw.fullname" . }}-gtw-secrets
              - name: "AZURE_CLIENT_CERTIFICATE_PATH"
                value: "/mnt/secrets-store/app-cert"
            volumeMounts:
              - name: {{ include "govway_fse_gtw.fullname" . }}-secrets-store
                mountPath: "/mnt/secrets-store"
                readOnly: true]
          volumes:
            - name: {{ include "govway_fse_gtw.fullname" . }}-secrets-store
              csi:
                driver: secrets-store.csi.k8s.io
                readOnly: true
                volumeAttributes:
                  secretProviderClass: {{ include "govway_fse_gtw.fullname" . }}-azure-keyvault-secrets  # Reference the dynamically generated SecretProviderClass
                nodePublishSecretRef:
                  name: {{ required "A valid .Values.secrets.secretKeyVaultName entry required!" (index (.Values.secrets) "secretKeyVaultName") }}
            {{ else if eq .Values.cloudProvider "aws" }}
              - name: AWS_LOG_LEVEL
                value: {{ .Values.govway.logLevel }}
            {{- end }}
          restartPolicy: OnFailure
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 10 }}
          {{- end }}

